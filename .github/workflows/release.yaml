# This is a basic workflow to help you get started with Actions

name: CI_RELEASE

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: 
      - published
      - edited

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_release:
    # The type of runner that the job will run on
    runs-on: windows-2019
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      # Support longpaths
      - name: Support long paths
        run: git config --system core.longpaths true
      
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
          
      - name: set up msvc env
        uses: ilammy/msvc-dev-cmd@v1.5.0
      
      - name: Build Common Tools
        shell: cmd
        run: |
          cd third_party\CommonTools
          msbuild -p:Configuration=Release,Platform="Any CPU" -m CommonTools.sln

      - name: Extract commit SHA
        run: |
          echo "GITHUB_COMMIT_MESSAGE=$(echo $GITHUB_SHA)" >> $GITHUB_ENV
        shell: bash
       
      - name: Prepare version
        shell: cmd
        run: |
          cd third_party\CommonTools\Output
          VersionGenerator %GITHUB_WORKSPACE%\ProductInformation\Version.cs %GITHUB_WORKSPACE%\ProductInformation ${{ env.GITHUB_COMMIT_MESSAGE }}
        env:
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
      
      - name: configure OpenDDS
        shell: cmd
        run: |
          cd third_party\OpenDDS
          configure

      - name: Generate OpenDDS projects
        shell: cmd
        run: |
          call .\third_party\OpenDDS\setenv.cmd
          cd DataDistributionManagerOpenDDS
          perl %ACE_ROOT%\bin\generate_export_file.pl DataDistributionSchemaCommon > DataDistributionSchemaCommon_Export.h
          perl %ACE_ROOT%\bin\mwc.pl -type vs2019 DataDistributionManagerOpenDDS.mwc
          cd..

      - name: Build OpenDDS x64
        shell: cmd
        run: |
          cd third_party\OpenDDS
          call setenv.cmd
          msbuild -p:Configuration=Release,Platform=x64 -m DDS_TAOv2.sln

      - name: Move OpenDDS x64
        shell: cmd
        run: |
          cd third_party\OpenDDS
          xcopy .\lib\*.dll ..\..\Output\x64\
          xcopy .\lib\*.pdb ..\..\Output\pdb64\
          xcopy .\lib\*.lib ..\..\Output\lib64\
          xcopy .\bin\*.exe ..\..\Output\bin64\
          xcopy .\bin\*.pdb ..\..\Output\pdb64\
          xcopy .\ACE_wrappers\lib\*.dll ..\..\Output\x64\
          xcopy .\ACE_wrappers\lib\*.pdb ..\..\Output\pdb64\
          xcopy .\ACE_wrappers\lib\*.lib ..\..\Output\lib64\
          xcopy .\ACE_wrappers\bin\*.exe ..\..\Output\bin64\
          xcopy .\ACE_wrappers\bin\*.pdb ..\..\Output\pdb64\

      - name: Build OpenDDS x86
        shell: cmd
        run: |
          cd third_party\OpenDDS
          call setenv.cmd
          msbuild -p:Configuration=Release,Platform=Win32 -m DDS_TAOv2.sln

      - name: Move OpenDDS x86
        shell: cmd
        run: |
          cd third_party\OpenDDS
          xcopy .\lib\*.dll ..\..\Output\x86\
          xcopy .\lib\*.pdb ..\..\Output\pdb32\
          xcopy .\lib\*.lib ..\..\Output\lib32\
          xcopy .\bin\*.exe ..\..\Output\bin32\
          xcopy .\bin\*.pdb ..\..\Output\pdb32\
          xcopy .\ACE_wrappers\lib\*.dll ..\..\Output\x86\
          xcopy .\ACE_wrappers\lib\*.pdb ..\..\Output\pdb32\
          xcopy .\ACE_wrappers\lib\*.lib ..\..\Output\lib32\
          xcopy .\ACE_wrappers\bin\*.exe ..\..\Output\bin32\
          xcopy .\ACE_wrappers\bin\*.pdb ..\..\Output\pdb32\

      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - run: nuget restore DataDistributionManager.sln

      - name: Build DataDistributionManager x64
        shell: cmd
        run: |
          call .\third_party\OpenDDS\setenv.cmd
          set JDK_ROOT_FOLDER=C:\Program Files\Java\jdk-13.0.2+8
          msbuild /m -p:Configuration=Release,Platform=x64 DataDistributionManager.sln

      - name: Build DataDistributionManager x86
        shell: cmd
        run: |
          call .\third_party\OpenDDS\setenv.cmd
          set JDK_ROOT_FOLDER=C:\Program Files\Java\jdk-13.0.2+8
          msbuild /m -p:Configuration=Release,Platform=Win32 DataDistributionManager.sln

      - name: Build Java Binder
        shell: cmd
        run: |
          cd DataDistributionManagerJava
          set JDK_ROOT_FOLDER=C:\Program Files\Java\jdk-13.0.2+8
          CreateJar.bat
          cd..
          
      - name: Prepare for packaging
        shell: cmd
        run: |
          Rename-Item .\Output .\Output\runtime
          New-Item -Path .\Output\include -ItemType directory
          Copy-Item .\DataDistributionManager\DataDistributionManager.h .\Output\include\DataDistributionManager.h
          Copy-Item .\DataDistributionManager\DataDistributionManagerEnums.h .\Output\include\DataDistributionManagerEnums.h
          Copy-Item .\DataDistributionManager\SmartDataDistributionManager.h .\Output\include\SmartDataDistributionManager.h
          Remove-Item .\Output\runtime\*.exp -Recurse -Force
          Remove-Item .\Output\runtime\*.iobj -Recurse -Force
          Remove-Item .\Output\runtime\*.ipdb -Recurse -Force
          Remove-Item .\Output\runtime\*.xml -Recurse -Force
          Remove-Item .\Output\runtime\x64\DataDistributionManagerKafka.lib -Force
          Remove-Item .\Output\runtime\x64\DataDistributionManagerOpenDDS.lib -Force
          Remove-Item .\Output\runtime\x64\DataDistributionMastershipManager.lib -Force
          Remove-Item .\Output\runtime\x86\DataDistributionManagerKafka.lib -Force
          Remove-Item .\Output\runtime\x86\DataDistributionManagerOpenDDS.lib -Force
          Remove-Item .\Output\runtime\x86\DataDistributionMastershipManager.lib -Force
          Remove-Item -LiteralPath .\Output\runtime\lib64 -Force -Recurse
          Remove-Item -LiteralPath .\Output\runtime\lib32 -Force -Recurse
          Compress-Archive -Path .\Output\* -DestinationPath .\Output\DataDistributionManager.zip
          
      - name: Upload DataDistributionManager binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\Output\DataDistributionManager.zip
          asset_name: DataDistributionManager.zip
          tag: ${{ github.ref }}
          overwrite: true